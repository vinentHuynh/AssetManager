@page "/Maintenance"
@page "/Admin/Maintenance"
@using System.Data;
@using AssetManager.Model
@inject NavigationManager NavigationManager
@attribute [Authorize]


<div class="container-sm table-responsive">

    <div class="table-responsive">
        <table class="table table-hover table-bordered">

            <thead class="">
                <tr>
                    <th>ID</th>
                    <th>Asset</th>
                    <th>Maintenance Status</th>
                    <th>Requested By</th>
                    <th>Description</th>
                    <th>Date Requested</th>
                    <th>Date Out</th>
                    <th>Date In</th>
                    <th>Out</th>
                    <th>In</th>
                </tr>
            </thead>
                
            <tbody class="table-group-divider">

                @foreach (DataRow dr in dt.Rows)
                {
                    @if (dr.ItemArray[2].ToString() == "2")
                    {
                        isDisabledOut = false;
                    }
                    else if (dr.ItemArray[2].ToString() == "3")
                    {
                        isDisabledIn = false;
                    }
                    <tr>
                        @foreach (var item in dr.ItemArray)
                        {
                            <td>
                                @item
                            </td>
                        }
                        <td style="text-align:center"><button type="button" class="btn btn-outline-primary" @onclick="() => maintenanceOut(dr.ItemArray[0], dr.ItemArray[1])" disabled="@isDisabledOut"><span class="oi oi-tag"></span></button></td>
                        <td style="text-align:center"><button type="button" class="btn btn-outline-warning" @onclick="() => maintenanceIn(dr.ItemArray[0], dr.ItemArray[1])" disabled="@isDisabledIn"><span class="oi oi-list-rich"></span></button></td>
                    </tr>
                }

            </tbody>


        </table>
    </div>

</div>



@code {
    bool isDisabledOut = true;
    bool isDisabledIn = true;

    private ConnectionDB connection = new ConnectionDB();
    DataTable dt = new DataTable();
    string query =
        "SELECT " +
            "main.id, " +
            "CONCAT(asset.id, ' - ', asset.name), " +
            "mainStat.value, " +
            "CONCAT(req.id, ' - ', req.first_name, ' ', req.last_name), " +
            "main.description, " +
            "main.date_requested, " +
            "main.date_out, " +
            "main.date_in " +
        "FROM maintenance main " +
        "JOIN asset ON asset.id = main.asset_id " +
        "JOIN maintenance_status mainStat ON mainStat.id = main.maintenance_status_id " +
        "JOIN [user] req ON req.id = main.requested_by";
    protected override void OnInitialized()
    {
        connection.OpenConnection();
        dt = connection.ShowDataInGridView(query).Tables[0];
    }

    void maintenanceOut(object id, object assetId)
    {
        int idOut = Int32.Parse(id.ToString());
        int assetIdOut = Int32.Parse(assetId.ToString());
        MaintenanceService.MaintenanceOut(idOut, assetIdOut);
        NavigationManager.NavigateTo("/Maintenance", forceLoad: true);
    }

    void maintenanceIn(object id, object assetId)
    {
        int idIn = Int32.Parse(id.ToString());
        int assetIdIn = Int32.Parse(assetId.ToString());
        MaintenanceService.MaintenanceIn(idIn, assetIdIn);
        NavigationManager.NavigateTo("/Maintenance", forceLoad: true);
    }
}
